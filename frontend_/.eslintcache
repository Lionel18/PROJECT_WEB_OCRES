[{"C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\reportWebVitals.js":"1","C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\App.js":"2","C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\index.js":"3","C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\components\\Filmographie\\Filmographie.js":"4","C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\components\\Banque\\Banque.js":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":305,"mtime":1606572221036,"results":"8","hashOfConfig":"7"},{"size":547,"mtime":1606571003872,"results":"9","hashOfConfig":"7"},{"size":2479,"mtime":1606571822004,"results":"10","hashOfConfig":"7"},{"size":2209,"mtime":1606571317744,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gp1d1h",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\reportWebVitals.js",[],"C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\App.js",["23","24","25"],"C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\index.js",[],"C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\components\\Filmographie\\Filmographie.js",["26","27","28","29"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './filmographie.css'\r\nimport { Jumbotron, Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\r\n\r\nconst films = [{\r\n\r\n    nom: \"Bad boys\",\r\n    date: \"25/11/2017\",\r\n    duree: 120,\r\n    genre: \"Action\",\r\n    synopsis: \"Très bon film\",\r\n    photo: 'https://fr.web.img6.acsta.net/pictures/19/11/22/09/44/3027567.jpg'\r\n\r\n}, {\r\n    nom: \"Taxi 5\",\r\n    date: \"25/11/2017\",\r\n    duree: 120,\r\n    genre: \"Action\",\r\n    synopsis: \"Très bon film\",\r\n    photo: 'https://fr.web.img3.acsta.net/pictures/18/03/09/12/16/2548759.jpg'\r\n}]\r\n\r\nconst Filmographie = (props) => {\r\n\r\n    const [film, setFilm] = useState(films[0])\r\n\r\n    const [searchFilm, setSearchFilm] = useState(\"\")\r\n\r\n    const findFilm = () => {\r\n        // fonction qui va aller chercher le film avec le nom\r\n        let foundFilm = films.find(f => f.nom == searchFilm); // on cherche le film avec le nom qui est écrit dans le champ de text (input)\r\n        setFilm(foundFilm) // on met à jour le state film pour afficher\r\n\r\n    }\r\n\r\n    return <div>\r\n        <Jumbotron>\r\n            <h1 className=\"display-3\">Widget Filmographie</h1>\r\n            <p className=\"lead\">Cherchez des films avec ce widget</p>\r\n            <InputGroup>\r\n                <Input type=\"text\" placeholder=\"Rechercher un film\" onChange={event => setSearchFilm(event.target.value)} />\r\n                <InputGroupAddon addonType=\"prepend\"><Button onClick={findFilm} >Rechercher</Button></InputGroupAddon>\r\n            </InputGroup>\r\n\r\n            {film &&\r\n                <>\r\n                    <figcaption>\r\n                        <img src={film.photo} width=\"150px\" height=\"200px\" alt=\"image\" />\r\n                    </figcaption>\r\n                    <section>\r\n                        <p>Nom du film : {film.nom}</p>\r\n                        <p>Date de sortie : {film.date}</p>\r\n                        <p>Genre : {film.genre}</p>\r\n                        <p>Synopsis : {film.synopsis}</p>\r\n                        <p>Durée : {film.duree} min </p>\r\n                    </section>\r\n                </>\r\n            }\r\n        </Jumbotron>\r\n\r\n\r\n    </div>\r\n}\r\n\r\n/*Filmographie.propTypes = {\r\n    date : PropTypes.string.isRequired,\r\n    film : PropTypes.string.isRequired,\r\n    genre : PropTypes.string.isRequired,\r\n    synopsis : PropTypes.string.isRequired,\r\n    duree : PropTypes.number.isRequired\r\n}*/\r\n\r\nexport default Filmographie","C:\\Users\\delph\\Documents\\PROJECT_WEB_OCRES\\frontend_\\src\\components\\Banque\\Banque.js",[],{"ruleId":"30","severity":1,"message":"31","line":4,"column":10,"nodeType":"32","messageId":"33","endLine":4,"endColumn":19},{"ruleId":"30","severity":1,"message":"34","line":4,"column":21,"nodeType":"32","messageId":"33","endLine":4,"endColumn":24},{"ruleId":"30","severity":1,"message":"35","line":4,"column":26,"nodeType":"32","messageId":"33","endLine":4,"endColumn":29},{"ruleId":"30","severity":1,"message":"36","line":1,"column":27,"nodeType":"32","messageId":"33","endLine":1,"endColumn":36},{"ruleId":"30","severity":1,"message":"37","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":17},{"ruleId":"38","severity":1,"message":"39","line":32,"column":47,"nodeType":"40","messageId":"41","endLine":32,"endColumn":49},{"ruleId":"42","severity":1,"message":"43","line":49,"column":25,"nodeType":"44","endLine":49,"endColumn":90},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]